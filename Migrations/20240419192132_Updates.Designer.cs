// <auto-generated />
using System;
using ImobiliariaApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImobiliariaApi.Migrations
{
    [DbContext(typeof(ImobiliariaContext))]
    [Migration("20240419192132_Updates")]
    partial class Updates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ImobiliariaApi.Models.Corretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Corretores");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.CorretorInquilino", b =>
                {
                    b.Property<int>("CorretorId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("InquilinoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("CorretorId", "InquilinoId");

                    b.HasIndex("InquilinoId");

                    b.ToTable("CorretorInquilino");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.Imovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InquilinoId")
                        .HasColumnType("int");

                    b.Property<int>("ProprietarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InquilinoId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.Inquilino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Inquilinos");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.Proprietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Proprietarios");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.ProprietarioCorretor", b =>
                {
                    b.Property<int>("ProprietarioId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CorretorId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ProprietarioId", "CorretorId");

                    b.HasIndex("CorretorId");

                    b.ToTable("ProprietarioCorretor");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.CorretorInquilino", b =>
                {
                    b.HasOne("ImobiliariaApi.Models.Corretor", "Corretor")
                        .WithMany("Inquilinos")
                        .HasForeignKey("CorretorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImobiliariaApi.Models.Inquilino", "Inquilino")
                        .WithMany("Corretores")
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corretor");

                    b.Navigation("Inquilino");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.Imovel", b =>
                {
                    b.HasOne("ImobiliariaApi.Models.Inquilino", "Inquilino")
                        .WithMany("ImoveisAlugados")
                        .HasForeignKey("InquilinoId");

                    b.HasOne("ImobiliariaApi.Models.Proprietario", "Proprietario")
                        .WithMany("Imoveis")
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inquilino");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.ProprietarioCorretor", b =>
                {
                    b.HasOne("ImobiliariaApi.Models.Corretor", "Corretor")
                        .WithMany("Proprietarios")
                        .HasForeignKey("CorretorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ImobiliariaApi.Models.Proprietario", "Proprietario")
                        .WithMany("Corretores")
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corretor");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.Corretor", b =>
                {
                    b.Navigation("Inquilinos");

                    b.Navigation("Proprietarios");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.Inquilino", b =>
                {
                    b.Navigation("Corretores");

                    b.Navigation("ImoveisAlugados");
                });

            modelBuilder.Entity("ImobiliariaApi.Models.Proprietario", b =>
                {
                    b.Navigation("Corretores");

                    b.Navigation("Imoveis");
                });
#pragma warning restore 612, 618
        }
    }
}
